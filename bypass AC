local player = game:GetService("Players").LocalPlayer
local runService = game:GetService("RunService")
local teleportService = game:GetService("TeleportService")
local replicatedStorage = game:GetService("ReplicatedStorage")

local function safeCall(func, retryCount)
    retryCount = retryCount or 3
    return function(...)
        for i = 1, retryCount do
            local success, result = pcall(func, ...)
            if success then return true, result end
            warn(string.format("Attempt %d/%d failed: %s", i, retryCount, tostring(result)))
            task.wait(1)
        end
        error("Function failed after multiple attempts")
    end
end

local function handleTeleport()
    player.OnTeleport:Connect(function(state)
        if state == Enum.TeleportState.Failed then
            for i = 1, 3 do
                task.wait(5)
                local success = pcall(function()
                    teleportService:Teleport(game.PlaceId, player)
                end)
                if success then break end
            end
        end
    end)
end

local function setupCharacter(character)
    local humanoid = character:WaitForChild("Humanoid")
    local rootPart = character:WaitForChild("HumanoidRootPart")
    
    humanoid.Died:Connect(function()
        task.wait(3)
        player:LoadCharacter()
    end)

    runService.Heartbeat:Connect(function()
        if character.Parent then
            rootPart.CFrame = rootPart.CFrame * CFrame.new(math.random(-1, 1)/10, 0, math.random(-1, 1)/10)
        end
    end)
end

player.CharacterAdded:Connect(setupCharacter)
handleTeleport()

local hiddenScript = Instance.new("LocalScript")
hiddenScript.Name = string.char(math.random(97, 122)) .. math.random(100000, 999999)
hiddenScript.Source = [[
    local env = setmetatable({}, {__index = getfenv()})
    env.script = script
    setfenv(1, env)
    while true do
        task.wait(math.random(1, 5))
        pcall(function()
            local a = 1
            for i = 1, 10 do a = a * i end
        end)
    end
]]
hiddenScript.Parent = player:WaitForChild("PlayerScripts")

task.spawn(function()
    while true do
        for _, v in ipairs(player:GetDescendants()) do
            if v:IsA("LocalScript") and v ~= hiddenScript then
                v.Disabled = true
            end
        end
        task.wait(1)
    end
end)
